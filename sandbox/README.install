# retrieve sandbox system from contrib repository
git clone git://git.koha-community.org/contrib/global.git /home/koha/contrib

# uncompress .sample databases
cd contrib/sandbox/sql
gzip -d sandbox*.sql.gz
git checkout checkout sandbox1.sql.gz
git checkout checkout sandbox2.sql.gz

# go to koha and update it
cd /home/koha/src;git fetch;git checkout master;git rebase origin/master
# link files from contrib repo to koha:
mkdir -p sandbox/templates
mkdir -p sandbox/sql
ln -s /home/koha/contrib/sandbox/sandbox.pl sandbox.pl
cd /home/koha/src/sandbox/templates
ln -s /home/koha/contrib/sandbox/templates/sandbox.tt sandbox.tt
cd /home/koha/src/sandbox/sql
ln -s /home/koha/contrib/sandbox/sql/sandbox1.sql sandbox1.sql
ln -s /home/koha/contrib/sandbox/sql/sandbox2.sql sandbox2.sql
cd /home/koha/src/sandbox/cron
ln -s /home/koha/contrib/sandbox/cron/sandbox.cron sandbox.cron
ln -s /home/koha/contrib/sandbox/cron/sandbox_signoff.cron sandbox_signoff.cron

# edit your .gitignore file
vim /home/koha/src/.gitignore
.gitignore
sandbox
koha-tmpl/intranet-tmpl/prog/fr-FR/*
koha-tmpl/opac-tmpl/prog/fr-FR/*

# (the sandbox directory should be in your main KOHA directory)

Update your crontab.
Your crontab should look like this:
# who should I mail?
MAILTO=your.email@address.for.sysop
# add /home/koha/bin, where git-bz will be stored
PATH=/home/koha/bin:/usr/local/bin:/usr/bin:/bin
# Koha conf
KOHA_CONF=/home/koha/etc/koha-conf.xml
PERL5LIB=/home/koha/src

##### For Rebuild Zebra
* * * * * /home/koha/bin/zebraqueue.sh > /dev/null 2>&1

# update master every night at 1:15AM
15 1 * * * cd /home/koha/src;git fetch;git checkout master > /dev/null 2>&1;git rebase origin/master > /dev/null
# update the contrib repository at 2:15AM
15 2 * * * cd /home/koha/contrib;git fetch;git checkout master > /dev/null 2>&1 ;git rebase origin/master > /dev/null
# every minute, check if there is a sandbox to install
* * * * * cd /home/koha/src/sandbox/cron;./sandbox.cron -d mysql_database_name
# every minute, check if there is a patch to signoff
* * * * * cd /home/koha/src/sandbox/cron;./sandbox_signoff.cron -u bugzilla_username -p bugzilla_password

# retrieve git bz
git clone git://git.koha-community.org/git-bz.git git-bz
# apply -3 parameters patch
cd git-bz
git checkout -b fishsoup origin/fishsoup

# make git-bz on PATH
ln -s /home/koha/git-bz/git-bz /home/koha/bin/git-bz

# setup git-bz parameters
cd ~/src
git config bz.default-tracker bugs.koha-community.org
git config --global bz-tracker.bugs.koha-community.org.path /bugzilla3
git config bz.default-product Koha
git config --global bz-tracker.bugs.koha-community.org.bz-user YOURLOGIN
git config --global bz-tracker.bugs.koha-community.org.bz-password YOURPASSWORD

# you can now test the sandbox system
http://your.koha.url/cgi-bin/koha/sandbox.pl

# after submitting the form, on /tmp, you should see a /tmp/sandbox file
# that is not null and contains the informations you've just filled

# your koha user MUST be partially sudoer
#in /etc/sudoers, add
koha            ALL=(ALL) NOPASSWD: /bin/rm /tmp/sandbox
koha            ALL=(ALL) NOPASSWD: /bin/rm /tmp/signoff

# if you don't have this line, the files won't be deleted, and every minute, the crons will be restarted.
# Expect some trouble !!!

Setup signoff-tool

With sandbox version 2, users will be able to signoff directly from the web interface.
A Perl library must be installed in order for this feature to work:
sudo apt-get install libwww-bugzilla-perl

This library handles only default bugzilla status (ASSIGNED, RESOLVED...), so can't handle the "SIGNED OFF" status
You must tweak this library:
sudo vi /usr/share/perl5/WWW/Bugzilla.pm
Update the :
    my %status = (
            'ASSIGNED'  => 'accept',
            'REOPENED'    => 'reopen',
            'VERIFIED'  => 'verify',
            'CLOSED'    => 'close'
            );
to have:
    my %status = (
            'ASSIGNED'  => 'accept',
            'REOPENED'    => 'reopen',
            'VERIFIED'  => 'verify',
            'CLOSED'    => 'close',
            'SIGNED OFF'=> 'Signed Off',
            );

that should work !

# Create a /home/koha/contrib/sandbox/config.yaml file:
database:
  driver: mysql
  name: sandboxes_stats
  port: 3306
  host: host
  user: sandboxes
  passwd: password

# Create an sql database on this host (for statistics):
mysql> create table stats(id int auto_increment, name text, email VARCHAR(255),  date timestamp not null default CURRENT_TIMESTAMP, action varchar(255) not null, bznumber int not null, host varchar(255), primary key (id) );
